// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dst_type_fusion_config.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "dst_type_fusion_config.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace apollo {
namespace perception {
namespace fusion {
class CameraDstTypeFusionParamDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<CameraDstTypeFusionParam> {
} _CameraDstTypeFusionParam_default_instance_;
class LidarDstTypeFusionParamDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<LidarDstTypeFusionParam> {
} _LidarDstTypeFusionParam_default_instance_;
class DstTypeFusionConfigDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<DstTypeFusionConfig> {
} _DstTypeFusionConfig_default_instance_;

namespace protobuf_dst_5ftype_5ffusion_5fconfig_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[3];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CameraDstTypeFusionParam, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CameraDstTypeFusionParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CameraDstTypeFusionParam, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CameraDstTypeFusionParam, valid_dist_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CameraDstTypeFusionParam, reliability_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(CameraDstTypeFusionParam, reliability_for_unknown_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LidarDstTypeFusionParam, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LidarDstTypeFusionParam, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LidarDstTypeFusionParam, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LidarDstTypeFusionParam, reliability_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LidarDstTypeFusionParam, reliability_for_unknown_),
  0,
  1,
  2,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DstTypeFusionConfig, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DstTypeFusionConfig, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DstTypeFusionConfig, camera_params_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(DstTypeFusionConfig, lidar_params_),
  ~0u,
  ~0u,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 9, sizeof(CameraDstTypeFusionParam)},
  { 13, 21, sizeof(LidarDstTypeFusionParam)},
  { 24, 31, sizeof(DstTypeFusionConfig)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_CameraDstTypeFusionParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_LidarDstTypeFusionParam_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_DstTypeFusionConfig_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "dst_type_fusion_config.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

}  // namespace

void TableStruct::Shutdown() {
  _CameraDstTypeFusionParam_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _LidarDstTypeFusionParam_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _DstTypeFusionConfig_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _CameraDstTypeFusionParam_default_instance_.DefaultConstruct();
  _LidarDstTypeFusionParam_default_instance_.DefaultConstruct();
  _DstTypeFusionConfig_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n\034dst_type_fusion_config.proto\022\030apollo.p"
      "erception.fusion\"}\n\030CameraDstTypeFusionP"
      "aram\022\016\n\004name\030\001 \001(\t:\000\022\025\n\nvalid_dist\030\002 \001(\001"
      ":\0010\022\026\n\013reliability\030\003 \001(\001:\0010\022\"\n\027reliabili"
      "ty_for_unknown\030\004 \001(\001:\0010\"e\n\027LidarDstTypeF"
      "usionParam\022\016\n\004name\030\001 \001(\t:\000\022\026\n\013reliabilit"
      "y\030\002 \001(\001:\0010\022\"\n\027reliability_for_unknown\030\003 "
      "\001(\001:\0010\"\251\001\n\023DstTypeFusionConfig\022I\n\rcamera"
      "_params\030\001 \003(\01322.apollo.perception.fusion"
      ".CameraDstTypeFusionParam\022G\n\014lidar_param"
      "s\030\002 \003(\01321.apollo.perception.fusion.Lidar"
      "DstTypeFusionParam"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 458);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "dst_type_fusion_config.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_dst_5ftype_5ffusion_5fconfig_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int CameraDstTypeFusionParam::kNameFieldNumber;
const int CameraDstTypeFusionParam::kValidDistFieldNumber;
const int CameraDstTypeFusionParam::kReliabilityFieldNumber;
const int CameraDstTypeFusionParam::kReliabilityForUnknownFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

CameraDstTypeFusionParam::CameraDstTypeFusionParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_dst_5ftype_5ffusion_5fconfig_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.perception.fusion.CameraDstTypeFusionParam)
}
CameraDstTypeFusionParam::CameraDstTypeFusionParam(const CameraDstTypeFusionParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&valid_dist_, &from.valid_dist_,
    reinterpret_cast<char*>(&reliability_for_unknown_) -
    reinterpret_cast<char*>(&valid_dist_) + sizeof(reliability_for_unknown_));
  // @@protoc_insertion_point(copy_constructor:apollo.perception.fusion.CameraDstTypeFusionParam)
}

void CameraDstTypeFusionParam::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&valid_dist_, 0, reinterpret_cast<char*>(&reliability_for_unknown_) -
    reinterpret_cast<char*>(&valid_dist_) + sizeof(reliability_for_unknown_));
}

CameraDstTypeFusionParam::~CameraDstTypeFusionParam() {
  // @@protoc_insertion_point(destructor:apollo.perception.fusion.CameraDstTypeFusionParam)
  SharedDtor();
}

void CameraDstTypeFusionParam::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void CameraDstTypeFusionParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* CameraDstTypeFusionParam::descriptor() {
  protobuf_dst_5ftype_5ffusion_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dst_5ftype_5ffusion_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const CameraDstTypeFusionParam& CameraDstTypeFusionParam::default_instance() {
  protobuf_dst_5ftype_5ffusion_5fconfig_2eproto::InitDefaults();
  return *internal_default_instance();
}

CameraDstTypeFusionParam* CameraDstTypeFusionParam::New(::google::protobuf::Arena* arena) const {
  CameraDstTypeFusionParam* n = new CameraDstTypeFusionParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void CameraDstTypeFusionParam::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.fusion.CameraDstTypeFusionParam)
  if (has_name()) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 14u) {
    ::memset(&valid_dist_, 0, reinterpret_cast<char*>(&reliability_for_unknown_) -
      reinterpret_cast<char*>(&valid_dist_) + sizeof(reliability_for_unknown_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool CameraDstTypeFusionParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.perception.fusion.CameraDstTypeFusionParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1 [default = ""];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.perception.fusion.CameraDstTypeFusionParam.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double valid_dist = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u)) {
          set_has_valid_dist();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &valid_dist_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double reliability = 3 [default = 0];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u)) {
          set_has_reliability();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &reliability_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double reliability_for_unknown = 4 [default = 0];
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(33u)) {
          set_has_reliability_for_unknown();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &reliability_for_unknown_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.perception.fusion.CameraDstTypeFusionParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.perception.fusion.CameraDstTypeFusionParam)
  return false;
#undef DO_
}

void CameraDstTypeFusionParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.perception.fusion.CameraDstTypeFusionParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1 [default = ""];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.perception.fusion.CameraDstTypeFusionParam.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional double valid_dist = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->valid_dist(), output);
  }

  // optional double reliability = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->reliability(), output);
  }

  // optional double reliability_for_unknown = 4 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(4, this->reliability_for_unknown(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.perception.fusion.CameraDstTypeFusionParam)
}

::google::protobuf::uint8* CameraDstTypeFusionParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.fusion.CameraDstTypeFusionParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1 [default = ""];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.perception.fusion.CameraDstTypeFusionParam.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional double valid_dist = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->valid_dist(), target);
  }

  // optional double reliability = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->reliability(), target);
  }

  // optional double reliability_for_unknown = 4 [default = 0];
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(4, this->reliability_for_unknown(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.fusion.CameraDstTypeFusionParam)
  return target;
}

size_t CameraDstTypeFusionParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.fusion.CameraDstTypeFusionParam)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string name = 1 [default = ""];
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional double valid_dist = 2 [default = 0];
    if (has_valid_dist()) {
      total_size += 1 + 8;
    }

    // optional double reliability = 3 [default = 0];
    if (has_reliability()) {
      total_size += 1 + 8;
    }

    // optional double reliability_for_unknown = 4 [default = 0];
    if (has_reliability_for_unknown()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void CameraDstTypeFusionParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.perception.fusion.CameraDstTypeFusionParam)
  GOOGLE_DCHECK_NE(&from, this);
  const CameraDstTypeFusionParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const CameraDstTypeFusionParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.perception.fusion.CameraDstTypeFusionParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.perception.fusion.CameraDstTypeFusionParam)
    MergeFrom(*source);
  }
}

void CameraDstTypeFusionParam::MergeFrom(const CameraDstTypeFusionParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.fusion.CameraDstTypeFusionParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      valid_dist_ = from.valid_dist_;
    }
    if (cached_has_bits & 0x00000004u) {
      reliability_ = from.reliability_;
    }
    if (cached_has_bits & 0x00000008u) {
      reliability_for_unknown_ = from.reliability_for_unknown_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void CameraDstTypeFusionParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.perception.fusion.CameraDstTypeFusionParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void CameraDstTypeFusionParam::CopyFrom(const CameraDstTypeFusionParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.fusion.CameraDstTypeFusionParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool CameraDstTypeFusionParam::IsInitialized() const {
  return true;
}

void CameraDstTypeFusionParam::Swap(CameraDstTypeFusionParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void CameraDstTypeFusionParam::InternalSwap(CameraDstTypeFusionParam* other) {
  name_.Swap(&other->name_);
  std::swap(valid_dist_, other->valid_dist_);
  std::swap(reliability_, other->reliability_);
  std::swap(reliability_for_unknown_, other->reliability_for_unknown_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata CameraDstTypeFusionParam::GetMetadata() const {
  protobuf_dst_5ftype_5ffusion_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dst_5ftype_5ffusion_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// CameraDstTypeFusionParam

// optional string name = 1 [default = ""];
bool CameraDstTypeFusionParam::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void CameraDstTypeFusionParam::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void CameraDstTypeFusionParam::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void CameraDstTypeFusionParam::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& CameraDstTypeFusionParam::name() const {
  // @@protoc_insertion_point(field_get:apollo.perception.fusion.CameraDstTypeFusionParam.name)
  return name_.GetNoArena();
}
void CameraDstTypeFusionParam::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.perception.fusion.CameraDstTypeFusionParam.name)
}
#if LANG_CXX11
void CameraDstTypeFusionParam::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.perception.fusion.CameraDstTypeFusionParam.name)
}
#endif
void CameraDstTypeFusionParam::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.perception.fusion.CameraDstTypeFusionParam.name)
}
void CameraDstTypeFusionParam::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.perception.fusion.CameraDstTypeFusionParam.name)
}
::std::string* CameraDstTypeFusionParam::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:apollo.perception.fusion.CameraDstTypeFusionParam.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* CameraDstTypeFusionParam::release_name() {
  // @@protoc_insertion_point(field_release:apollo.perception.fusion.CameraDstTypeFusionParam.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void CameraDstTypeFusionParam::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:apollo.perception.fusion.CameraDstTypeFusionParam.name)
}

// optional double valid_dist = 2 [default = 0];
bool CameraDstTypeFusionParam::has_valid_dist() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void CameraDstTypeFusionParam::set_has_valid_dist() {
  _has_bits_[0] |= 0x00000002u;
}
void CameraDstTypeFusionParam::clear_has_valid_dist() {
  _has_bits_[0] &= ~0x00000002u;
}
void CameraDstTypeFusionParam::clear_valid_dist() {
  valid_dist_ = 0;
  clear_has_valid_dist();
}
double CameraDstTypeFusionParam::valid_dist() const {
  // @@protoc_insertion_point(field_get:apollo.perception.fusion.CameraDstTypeFusionParam.valid_dist)
  return valid_dist_;
}
void CameraDstTypeFusionParam::set_valid_dist(double value) {
  set_has_valid_dist();
  valid_dist_ = value;
  // @@protoc_insertion_point(field_set:apollo.perception.fusion.CameraDstTypeFusionParam.valid_dist)
}

// optional double reliability = 3 [default = 0];
bool CameraDstTypeFusionParam::has_reliability() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void CameraDstTypeFusionParam::set_has_reliability() {
  _has_bits_[0] |= 0x00000004u;
}
void CameraDstTypeFusionParam::clear_has_reliability() {
  _has_bits_[0] &= ~0x00000004u;
}
void CameraDstTypeFusionParam::clear_reliability() {
  reliability_ = 0;
  clear_has_reliability();
}
double CameraDstTypeFusionParam::reliability() const {
  // @@protoc_insertion_point(field_get:apollo.perception.fusion.CameraDstTypeFusionParam.reliability)
  return reliability_;
}
void CameraDstTypeFusionParam::set_reliability(double value) {
  set_has_reliability();
  reliability_ = value;
  // @@protoc_insertion_point(field_set:apollo.perception.fusion.CameraDstTypeFusionParam.reliability)
}

// optional double reliability_for_unknown = 4 [default = 0];
bool CameraDstTypeFusionParam::has_reliability_for_unknown() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void CameraDstTypeFusionParam::set_has_reliability_for_unknown() {
  _has_bits_[0] |= 0x00000008u;
}
void CameraDstTypeFusionParam::clear_has_reliability_for_unknown() {
  _has_bits_[0] &= ~0x00000008u;
}
void CameraDstTypeFusionParam::clear_reliability_for_unknown() {
  reliability_for_unknown_ = 0;
  clear_has_reliability_for_unknown();
}
double CameraDstTypeFusionParam::reliability_for_unknown() const {
  // @@protoc_insertion_point(field_get:apollo.perception.fusion.CameraDstTypeFusionParam.reliability_for_unknown)
  return reliability_for_unknown_;
}
void CameraDstTypeFusionParam::set_reliability_for_unknown(double value) {
  set_has_reliability_for_unknown();
  reliability_for_unknown_ = value;
  // @@protoc_insertion_point(field_set:apollo.perception.fusion.CameraDstTypeFusionParam.reliability_for_unknown)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int LidarDstTypeFusionParam::kNameFieldNumber;
const int LidarDstTypeFusionParam::kReliabilityFieldNumber;
const int LidarDstTypeFusionParam::kReliabilityForUnknownFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

LidarDstTypeFusionParam::LidarDstTypeFusionParam()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_dst_5ftype_5ffusion_5fconfig_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.perception.fusion.LidarDstTypeFusionParam)
}
LidarDstTypeFusionParam::LidarDstTypeFusionParam(const LidarDstTypeFusionParam& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&reliability_, &from.reliability_,
    reinterpret_cast<char*>(&reliability_for_unknown_) -
    reinterpret_cast<char*>(&reliability_) + sizeof(reliability_for_unknown_));
  // @@protoc_insertion_point(copy_constructor:apollo.perception.fusion.LidarDstTypeFusionParam)
}

void LidarDstTypeFusionParam::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&reliability_, 0, reinterpret_cast<char*>(&reliability_for_unknown_) -
    reinterpret_cast<char*>(&reliability_) + sizeof(reliability_for_unknown_));
}

LidarDstTypeFusionParam::~LidarDstTypeFusionParam() {
  // @@protoc_insertion_point(destructor:apollo.perception.fusion.LidarDstTypeFusionParam)
  SharedDtor();
}

void LidarDstTypeFusionParam::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void LidarDstTypeFusionParam::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LidarDstTypeFusionParam::descriptor() {
  protobuf_dst_5ftype_5ffusion_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dst_5ftype_5ffusion_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const LidarDstTypeFusionParam& LidarDstTypeFusionParam::default_instance() {
  protobuf_dst_5ftype_5ffusion_5fconfig_2eproto::InitDefaults();
  return *internal_default_instance();
}

LidarDstTypeFusionParam* LidarDstTypeFusionParam::New(::google::protobuf::Arena* arena) const {
  LidarDstTypeFusionParam* n = new LidarDstTypeFusionParam;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LidarDstTypeFusionParam::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.fusion.LidarDstTypeFusionParam)
  if (has_name()) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 6u) {
    ::memset(&reliability_, 0, reinterpret_cast<char*>(&reliability_for_unknown_) -
      reinterpret_cast<char*>(&reliability_) + sizeof(reliability_for_unknown_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool LidarDstTypeFusionParam::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.perception.fusion.LidarDstTypeFusionParam)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1 [default = ""];
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "apollo.perception.fusion.LidarDstTypeFusionParam.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double reliability = 2 [default = 0];
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(17u)) {
          set_has_reliability();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &reliability_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional double reliability_for_unknown = 3 [default = 0];
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(25u)) {
          set_has_reliability_for_unknown();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   double, ::google::protobuf::internal::WireFormatLite::TYPE_DOUBLE>(
                 input, &reliability_for_unknown_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.perception.fusion.LidarDstTypeFusionParam)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.perception.fusion.LidarDstTypeFusionParam)
  return false;
#undef DO_
}

void LidarDstTypeFusionParam::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.perception.fusion.LidarDstTypeFusionParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1 [default = ""];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.perception.fusion.LidarDstTypeFusionParam.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional double reliability = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(2, this->reliability(), output);
  }

  // optional double reliability_for_unknown = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteDouble(3, this->reliability_for_unknown(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.perception.fusion.LidarDstTypeFusionParam)
}

::google::protobuf::uint8* LidarDstTypeFusionParam::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.fusion.LidarDstTypeFusionParam)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1 [default = ""];
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "apollo.perception.fusion.LidarDstTypeFusionParam.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional double reliability = 2 [default = 0];
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(2, this->reliability(), target);
  }

  // optional double reliability_for_unknown = 3 [default = 0];
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteDoubleToArray(3, this->reliability_for_unknown(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.fusion.LidarDstTypeFusionParam)
  return target;
}

size_t LidarDstTypeFusionParam::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.fusion.LidarDstTypeFusionParam)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 7u) {
    // optional string name = 1 [default = ""];
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional double reliability = 2 [default = 0];
    if (has_reliability()) {
      total_size += 1 + 8;
    }

    // optional double reliability_for_unknown = 3 [default = 0];
    if (has_reliability_for_unknown()) {
      total_size += 1 + 8;
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LidarDstTypeFusionParam::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.perception.fusion.LidarDstTypeFusionParam)
  GOOGLE_DCHECK_NE(&from, this);
  const LidarDstTypeFusionParam* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const LidarDstTypeFusionParam>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.perception.fusion.LidarDstTypeFusionParam)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.perception.fusion.LidarDstTypeFusionParam)
    MergeFrom(*source);
  }
}

void LidarDstTypeFusionParam::MergeFrom(const LidarDstTypeFusionParam& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.fusion.LidarDstTypeFusionParam)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 7u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      reliability_ = from.reliability_;
    }
    if (cached_has_bits & 0x00000004u) {
      reliability_for_unknown_ = from.reliability_for_unknown_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void LidarDstTypeFusionParam::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.perception.fusion.LidarDstTypeFusionParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LidarDstTypeFusionParam::CopyFrom(const LidarDstTypeFusionParam& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.fusion.LidarDstTypeFusionParam)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LidarDstTypeFusionParam::IsInitialized() const {
  return true;
}

void LidarDstTypeFusionParam::Swap(LidarDstTypeFusionParam* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LidarDstTypeFusionParam::InternalSwap(LidarDstTypeFusionParam* other) {
  name_.Swap(&other->name_);
  std::swap(reliability_, other->reliability_);
  std::swap(reliability_for_unknown_, other->reliability_for_unknown_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LidarDstTypeFusionParam::GetMetadata() const {
  protobuf_dst_5ftype_5ffusion_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dst_5ftype_5ffusion_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LidarDstTypeFusionParam

// optional string name = 1 [default = ""];
bool LidarDstTypeFusionParam::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void LidarDstTypeFusionParam::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void LidarDstTypeFusionParam::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void LidarDstTypeFusionParam::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& LidarDstTypeFusionParam::name() const {
  // @@protoc_insertion_point(field_get:apollo.perception.fusion.LidarDstTypeFusionParam.name)
  return name_.GetNoArena();
}
void LidarDstTypeFusionParam::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.perception.fusion.LidarDstTypeFusionParam.name)
}
#if LANG_CXX11
void LidarDstTypeFusionParam::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.perception.fusion.LidarDstTypeFusionParam.name)
}
#endif
void LidarDstTypeFusionParam::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.perception.fusion.LidarDstTypeFusionParam.name)
}
void LidarDstTypeFusionParam::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.perception.fusion.LidarDstTypeFusionParam.name)
}
::std::string* LidarDstTypeFusionParam::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:apollo.perception.fusion.LidarDstTypeFusionParam.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* LidarDstTypeFusionParam::release_name() {
  // @@protoc_insertion_point(field_release:apollo.perception.fusion.LidarDstTypeFusionParam.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void LidarDstTypeFusionParam::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:apollo.perception.fusion.LidarDstTypeFusionParam.name)
}

// optional double reliability = 2 [default = 0];
bool LidarDstTypeFusionParam::has_reliability() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void LidarDstTypeFusionParam::set_has_reliability() {
  _has_bits_[0] |= 0x00000002u;
}
void LidarDstTypeFusionParam::clear_has_reliability() {
  _has_bits_[0] &= ~0x00000002u;
}
void LidarDstTypeFusionParam::clear_reliability() {
  reliability_ = 0;
  clear_has_reliability();
}
double LidarDstTypeFusionParam::reliability() const {
  // @@protoc_insertion_point(field_get:apollo.perception.fusion.LidarDstTypeFusionParam.reliability)
  return reliability_;
}
void LidarDstTypeFusionParam::set_reliability(double value) {
  set_has_reliability();
  reliability_ = value;
  // @@protoc_insertion_point(field_set:apollo.perception.fusion.LidarDstTypeFusionParam.reliability)
}

// optional double reliability_for_unknown = 3 [default = 0];
bool LidarDstTypeFusionParam::has_reliability_for_unknown() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void LidarDstTypeFusionParam::set_has_reliability_for_unknown() {
  _has_bits_[0] |= 0x00000004u;
}
void LidarDstTypeFusionParam::clear_has_reliability_for_unknown() {
  _has_bits_[0] &= ~0x00000004u;
}
void LidarDstTypeFusionParam::clear_reliability_for_unknown() {
  reliability_for_unknown_ = 0;
  clear_has_reliability_for_unknown();
}
double LidarDstTypeFusionParam::reliability_for_unknown() const {
  // @@protoc_insertion_point(field_get:apollo.perception.fusion.LidarDstTypeFusionParam.reliability_for_unknown)
  return reliability_for_unknown_;
}
void LidarDstTypeFusionParam::set_reliability_for_unknown(double value) {
  set_has_reliability_for_unknown();
  reliability_for_unknown_ = value;
  // @@protoc_insertion_point(field_set:apollo.perception.fusion.LidarDstTypeFusionParam.reliability_for_unknown)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int DstTypeFusionConfig::kCameraParamsFieldNumber;
const int DstTypeFusionConfig::kLidarParamsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

DstTypeFusionConfig::DstTypeFusionConfig()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_dst_5ftype_5ffusion_5fconfig_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:apollo.perception.fusion.DstTypeFusionConfig)
}
DstTypeFusionConfig::DstTypeFusionConfig(const DstTypeFusionConfig& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      camera_params_(from.camera_params_),
      lidar_params_(from.lidar_params_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:apollo.perception.fusion.DstTypeFusionConfig)
}

void DstTypeFusionConfig::SharedCtor() {
  _cached_size_ = 0;
}

DstTypeFusionConfig::~DstTypeFusionConfig() {
  // @@protoc_insertion_point(destructor:apollo.perception.fusion.DstTypeFusionConfig)
  SharedDtor();
}

void DstTypeFusionConfig::SharedDtor() {
}

void DstTypeFusionConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* DstTypeFusionConfig::descriptor() {
  protobuf_dst_5ftype_5ffusion_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dst_5ftype_5ffusion_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const DstTypeFusionConfig& DstTypeFusionConfig::default_instance() {
  protobuf_dst_5ftype_5ffusion_5fconfig_2eproto::InitDefaults();
  return *internal_default_instance();
}

DstTypeFusionConfig* DstTypeFusionConfig::New(::google::protobuf::Arena* arena) const {
  DstTypeFusionConfig* n = new DstTypeFusionConfig;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void DstTypeFusionConfig::Clear() {
// @@protoc_insertion_point(message_clear_start:apollo.perception.fusion.DstTypeFusionConfig)
  camera_params_.Clear();
  lidar_params_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool DstTypeFusionConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:apollo.perception.fusion.DstTypeFusionConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .apollo.perception.fusion.CameraDstTypeFusionParam camera_params = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_camera_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .apollo.perception.fusion.LidarDstTypeFusionParam lidar_params = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(18u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_lidar_params()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:apollo.perception.fusion.DstTypeFusionConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:apollo.perception.fusion.DstTypeFusionConfig)
  return false;
#undef DO_
}

void DstTypeFusionConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:apollo.perception.fusion.DstTypeFusionConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .apollo.perception.fusion.CameraDstTypeFusionParam camera_params = 1;
  for (unsigned int i = 0, n = this->camera_params_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->camera_params(i), output);
  }

  // repeated .apollo.perception.fusion.LidarDstTypeFusionParam lidar_params = 2;
  for (unsigned int i = 0, n = this->lidar_params_size(); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->lidar_params(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:apollo.perception.fusion.DstTypeFusionConfig)
}

::google::protobuf::uint8* DstTypeFusionConfig::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:apollo.perception.fusion.DstTypeFusionConfig)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .apollo.perception.fusion.CameraDstTypeFusionParam camera_params = 1;
  for (unsigned int i = 0, n = this->camera_params_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->camera_params(i), deterministic, target);
  }

  // repeated .apollo.perception.fusion.LidarDstTypeFusionParam lidar_params = 2;
  for (unsigned int i = 0, n = this->lidar_params_size(); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        2, this->lidar_params(i), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:apollo.perception.fusion.DstTypeFusionConfig)
  return target;
}

size_t DstTypeFusionConfig::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:apollo.perception.fusion.DstTypeFusionConfig)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .apollo.perception.fusion.CameraDstTypeFusionParam camera_params = 1;
  {
    unsigned int count = this->camera_params_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->camera_params(i));
    }
  }

  // repeated .apollo.perception.fusion.LidarDstTypeFusionParam lidar_params = 2;
  {
    unsigned int count = this->lidar_params_size();
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->lidar_params(i));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void DstTypeFusionConfig::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:apollo.perception.fusion.DstTypeFusionConfig)
  GOOGLE_DCHECK_NE(&from, this);
  const DstTypeFusionConfig* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const DstTypeFusionConfig>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:apollo.perception.fusion.DstTypeFusionConfig)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:apollo.perception.fusion.DstTypeFusionConfig)
    MergeFrom(*source);
  }
}

void DstTypeFusionConfig::MergeFrom(const DstTypeFusionConfig& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:apollo.perception.fusion.DstTypeFusionConfig)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  camera_params_.MergeFrom(from.camera_params_);
  lidar_params_.MergeFrom(from.lidar_params_);
}

void DstTypeFusionConfig::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:apollo.perception.fusion.DstTypeFusionConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void DstTypeFusionConfig::CopyFrom(const DstTypeFusionConfig& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:apollo.perception.fusion.DstTypeFusionConfig)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool DstTypeFusionConfig::IsInitialized() const {
  return true;
}

void DstTypeFusionConfig::Swap(DstTypeFusionConfig* other) {
  if (other == this) return;
  InternalSwap(other);
}
void DstTypeFusionConfig::InternalSwap(DstTypeFusionConfig* other) {
  camera_params_.InternalSwap(&other->camera_params_);
  lidar_params_.InternalSwap(&other->lidar_params_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata DstTypeFusionConfig::GetMetadata() const {
  protobuf_dst_5ftype_5ffusion_5fconfig_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_dst_5ftype_5ffusion_5fconfig_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// DstTypeFusionConfig

// repeated .apollo.perception.fusion.CameraDstTypeFusionParam camera_params = 1;
int DstTypeFusionConfig::camera_params_size() const {
  return camera_params_.size();
}
void DstTypeFusionConfig::clear_camera_params() {
  camera_params_.Clear();
}
const ::apollo::perception::fusion::CameraDstTypeFusionParam& DstTypeFusionConfig::camera_params(int index) const {
  // @@protoc_insertion_point(field_get:apollo.perception.fusion.DstTypeFusionConfig.camera_params)
  return camera_params_.Get(index);
}
::apollo::perception::fusion::CameraDstTypeFusionParam* DstTypeFusionConfig::mutable_camera_params(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.perception.fusion.DstTypeFusionConfig.camera_params)
  return camera_params_.Mutable(index);
}
::apollo::perception::fusion::CameraDstTypeFusionParam* DstTypeFusionConfig::add_camera_params() {
  // @@protoc_insertion_point(field_add:apollo.perception.fusion.DstTypeFusionConfig.camera_params)
  return camera_params_.Add();
}
::google::protobuf::RepeatedPtrField< ::apollo::perception::fusion::CameraDstTypeFusionParam >*
DstTypeFusionConfig::mutable_camera_params() {
  // @@protoc_insertion_point(field_mutable_list:apollo.perception.fusion.DstTypeFusionConfig.camera_params)
  return &camera_params_;
}
const ::google::protobuf::RepeatedPtrField< ::apollo::perception::fusion::CameraDstTypeFusionParam >&
DstTypeFusionConfig::camera_params() const {
  // @@protoc_insertion_point(field_list:apollo.perception.fusion.DstTypeFusionConfig.camera_params)
  return camera_params_;
}

// repeated .apollo.perception.fusion.LidarDstTypeFusionParam lidar_params = 2;
int DstTypeFusionConfig::lidar_params_size() const {
  return lidar_params_.size();
}
void DstTypeFusionConfig::clear_lidar_params() {
  lidar_params_.Clear();
}
const ::apollo::perception::fusion::LidarDstTypeFusionParam& DstTypeFusionConfig::lidar_params(int index) const {
  // @@protoc_insertion_point(field_get:apollo.perception.fusion.DstTypeFusionConfig.lidar_params)
  return lidar_params_.Get(index);
}
::apollo::perception::fusion::LidarDstTypeFusionParam* DstTypeFusionConfig::mutable_lidar_params(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.perception.fusion.DstTypeFusionConfig.lidar_params)
  return lidar_params_.Mutable(index);
}
::apollo::perception::fusion::LidarDstTypeFusionParam* DstTypeFusionConfig::add_lidar_params() {
  // @@protoc_insertion_point(field_add:apollo.perception.fusion.DstTypeFusionConfig.lidar_params)
  return lidar_params_.Add();
}
::google::protobuf::RepeatedPtrField< ::apollo::perception::fusion::LidarDstTypeFusionParam >*
DstTypeFusionConfig::mutable_lidar_params() {
  // @@protoc_insertion_point(field_mutable_list:apollo.perception.fusion.DstTypeFusionConfig.lidar_params)
  return &lidar_params_;
}
const ::google::protobuf::RepeatedPtrField< ::apollo::perception::fusion::LidarDstTypeFusionParam >&
DstTypeFusionConfig::lidar_params() const {
  // @@protoc_insertion_point(field_list:apollo.perception.fusion.DstTypeFusionConfig.lidar_params)
  return lidar_params_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace fusion
}  // namespace perception
}  // namespace apollo

// @@protoc_insertion_point(global_scope)
