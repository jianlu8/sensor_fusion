// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: dst_type_fusion_config.proto

#ifndef PROTOBUF_dst_5ftype_5ffusion_5fconfig_2eproto__INCLUDED
#define PROTOBUF_dst_5ftype_5ffusion_5fconfig_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3003000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3003000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace apollo {
namespace perception {
namespace fusion {
class CameraDstTypeFusionParam;
class CameraDstTypeFusionParamDefaultTypeInternal;
extern CameraDstTypeFusionParamDefaultTypeInternal _CameraDstTypeFusionParam_default_instance_;
class DstTypeFusionConfig;
class DstTypeFusionConfigDefaultTypeInternal;
extern DstTypeFusionConfigDefaultTypeInternal _DstTypeFusionConfig_default_instance_;
class LidarDstTypeFusionParam;
class LidarDstTypeFusionParamDefaultTypeInternal;
extern LidarDstTypeFusionParamDefaultTypeInternal _LidarDstTypeFusionParam_default_instance_;
}  // namespace fusion
}  // namespace perception
}  // namespace apollo

namespace apollo {
namespace perception {
namespace fusion {

namespace protobuf_dst_5ftype_5ffusion_5fconfig_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static void InitDefaultsImpl();
  static void Shutdown();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_dst_5ftype_5ffusion_5fconfig_2eproto

// ===================================================================

class CameraDstTypeFusionParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.perception.fusion.CameraDstTypeFusionParam) */ {
 public:
  CameraDstTypeFusionParam();
  virtual ~CameraDstTypeFusionParam();

  CameraDstTypeFusionParam(const CameraDstTypeFusionParam& from);

  inline CameraDstTypeFusionParam& operator=(const CameraDstTypeFusionParam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const CameraDstTypeFusionParam& default_instance();

  static inline const CameraDstTypeFusionParam* internal_default_instance() {
    return reinterpret_cast<const CameraDstTypeFusionParam*>(
               &_CameraDstTypeFusionParam_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(CameraDstTypeFusionParam* other);

  // implements Message ----------------------------------------------

  inline CameraDstTypeFusionParam* New() const PROTOBUF_FINAL { return New(NULL); }

  CameraDstTypeFusionParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const CameraDstTypeFusionParam& from);
  void MergeFrom(const CameraDstTypeFusionParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(CameraDstTypeFusionParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1 [default = ""];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional double valid_dist = 2 [default = 0];
  bool has_valid_dist() const;
  void clear_valid_dist();
  static const int kValidDistFieldNumber = 2;
  double valid_dist() const;
  void set_valid_dist(double value);

  // optional double reliability = 3 [default = 0];
  bool has_reliability() const;
  void clear_reliability();
  static const int kReliabilityFieldNumber = 3;
  double reliability() const;
  void set_reliability(double value);

  // optional double reliability_for_unknown = 4 [default = 0];
  bool has_reliability_for_unknown() const;
  void clear_reliability_for_unknown();
  static const int kReliabilityForUnknownFieldNumber = 4;
  double reliability_for_unknown() const;
  void set_reliability_for_unknown(double value);

  // @@protoc_insertion_point(class_scope:apollo.perception.fusion.CameraDstTypeFusionParam)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_valid_dist();
  void clear_has_valid_dist();
  void set_has_reliability();
  void clear_has_reliability();
  void set_has_reliability_for_unknown();
  void clear_has_reliability_for_unknown();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  double valid_dist_;
  double reliability_;
  double reliability_for_unknown_;
  friend struct protobuf_dst_5ftype_5ffusion_5fconfig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class LidarDstTypeFusionParam : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.perception.fusion.LidarDstTypeFusionParam) */ {
 public:
  LidarDstTypeFusionParam();
  virtual ~LidarDstTypeFusionParam();

  LidarDstTypeFusionParam(const LidarDstTypeFusionParam& from);

  inline LidarDstTypeFusionParam& operator=(const LidarDstTypeFusionParam& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LidarDstTypeFusionParam& default_instance();

  static inline const LidarDstTypeFusionParam* internal_default_instance() {
    return reinterpret_cast<const LidarDstTypeFusionParam*>(
               &_LidarDstTypeFusionParam_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(LidarDstTypeFusionParam* other);

  // implements Message ----------------------------------------------

  inline LidarDstTypeFusionParam* New() const PROTOBUF_FINAL { return New(NULL); }

  LidarDstTypeFusionParam* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const LidarDstTypeFusionParam& from);
  void MergeFrom(const LidarDstTypeFusionParam& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(LidarDstTypeFusionParam* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1 [default = ""];
  bool has_name() const;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // optional double reliability = 2 [default = 0];
  bool has_reliability() const;
  void clear_reliability();
  static const int kReliabilityFieldNumber = 2;
  double reliability() const;
  void set_reliability(double value);

  // optional double reliability_for_unknown = 3 [default = 0];
  bool has_reliability_for_unknown() const;
  void clear_reliability_for_unknown();
  static const int kReliabilityForUnknownFieldNumber = 3;
  double reliability_for_unknown() const;
  void set_reliability_for_unknown(double value);

  // @@protoc_insertion_point(class_scope:apollo.perception.fusion.LidarDstTypeFusionParam)
 private:
  void set_has_name();
  void clear_has_name();
  void set_has_reliability();
  void clear_has_reliability();
  void set_has_reliability_for_unknown();
  void clear_has_reliability_for_unknown();

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  double reliability_;
  double reliability_for_unknown_;
  friend struct protobuf_dst_5ftype_5ffusion_5fconfig_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class DstTypeFusionConfig : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:apollo.perception.fusion.DstTypeFusionConfig) */ {
 public:
  DstTypeFusionConfig();
  virtual ~DstTypeFusionConfig();

  DstTypeFusionConfig(const DstTypeFusionConfig& from);

  inline DstTypeFusionConfig& operator=(const DstTypeFusionConfig& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const DstTypeFusionConfig& default_instance();

  static inline const DstTypeFusionConfig* internal_default_instance() {
    return reinterpret_cast<const DstTypeFusionConfig*>(
               &_DstTypeFusionConfig_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(DstTypeFusionConfig* other);

  // implements Message ----------------------------------------------

  inline DstTypeFusionConfig* New() const PROTOBUF_FINAL { return New(NULL); }

  DstTypeFusionConfig* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const DstTypeFusionConfig& from);
  void MergeFrom(const DstTypeFusionConfig& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(DstTypeFusionConfig* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .apollo.perception.fusion.CameraDstTypeFusionParam camera_params = 1;
  int camera_params_size() const;
  void clear_camera_params();
  static const int kCameraParamsFieldNumber = 1;
  const ::apollo::perception::fusion::CameraDstTypeFusionParam& camera_params(int index) const;
  ::apollo::perception::fusion::CameraDstTypeFusionParam* mutable_camera_params(int index);
  ::apollo::perception::fusion::CameraDstTypeFusionParam* add_camera_params();
  ::google::protobuf::RepeatedPtrField< ::apollo::perception::fusion::CameraDstTypeFusionParam >*
      mutable_camera_params();
  const ::google::protobuf::RepeatedPtrField< ::apollo::perception::fusion::CameraDstTypeFusionParam >&
      camera_params() const;

  // repeated .apollo.perception.fusion.LidarDstTypeFusionParam lidar_params = 2;
  int lidar_params_size() const;
  void clear_lidar_params();
  static const int kLidarParamsFieldNumber = 2;
  const ::apollo::perception::fusion::LidarDstTypeFusionParam& lidar_params(int index) const;
  ::apollo::perception::fusion::LidarDstTypeFusionParam* mutable_lidar_params(int index);
  ::apollo::perception::fusion::LidarDstTypeFusionParam* add_lidar_params();
  ::google::protobuf::RepeatedPtrField< ::apollo::perception::fusion::LidarDstTypeFusionParam >*
      mutable_lidar_params();
  const ::google::protobuf::RepeatedPtrField< ::apollo::perception::fusion::LidarDstTypeFusionParam >&
      lidar_params() const;

  // @@protoc_insertion_point(class_scope:apollo.perception.fusion.DstTypeFusionConfig)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::HasBits<1> _has_bits_;
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::apollo::perception::fusion::CameraDstTypeFusionParam > camera_params_;
  ::google::protobuf::RepeatedPtrField< ::apollo::perception::fusion::LidarDstTypeFusionParam > lidar_params_;
  friend struct protobuf_dst_5ftype_5ffusion_5fconfig_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// CameraDstTypeFusionParam

// optional string name = 1 [default = ""];
inline bool CameraDstTypeFusionParam::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void CameraDstTypeFusionParam::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void CameraDstTypeFusionParam::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void CameraDstTypeFusionParam::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& CameraDstTypeFusionParam::name() const {
  // @@protoc_insertion_point(field_get:apollo.perception.fusion.CameraDstTypeFusionParam.name)
  return name_.GetNoArena();
}
inline void CameraDstTypeFusionParam::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.perception.fusion.CameraDstTypeFusionParam.name)
}
#if LANG_CXX11
inline void CameraDstTypeFusionParam::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.perception.fusion.CameraDstTypeFusionParam.name)
}
#endif
inline void CameraDstTypeFusionParam::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.perception.fusion.CameraDstTypeFusionParam.name)
}
inline void CameraDstTypeFusionParam::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.perception.fusion.CameraDstTypeFusionParam.name)
}
inline ::std::string* CameraDstTypeFusionParam::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:apollo.perception.fusion.CameraDstTypeFusionParam.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* CameraDstTypeFusionParam::release_name() {
  // @@protoc_insertion_point(field_release:apollo.perception.fusion.CameraDstTypeFusionParam.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void CameraDstTypeFusionParam::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:apollo.perception.fusion.CameraDstTypeFusionParam.name)
}

// optional double valid_dist = 2 [default = 0];
inline bool CameraDstTypeFusionParam::has_valid_dist() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void CameraDstTypeFusionParam::set_has_valid_dist() {
  _has_bits_[0] |= 0x00000002u;
}
inline void CameraDstTypeFusionParam::clear_has_valid_dist() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void CameraDstTypeFusionParam::clear_valid_dist() {
  valid_dist_ = 0;
  clear_has_valid_dist();
}
inline double CameraDstTypeFusionParam::valid_dist() const {
  // @@protoc_insertion_point(field_get:apollo.perception.fusion.CameraDstTypeFusionParam.valid_dist)
  return valid_dist_;
}
inline void CameraDstTypeFusionParam::set_valid_dist(double value) {
  set_has_valid_dist();
  valid_dist_ = value;
  // @@protoc_insertion_point(field_set:apollo.perception.fusion.CameraDstTypeFusionParam.valid_dist)
}

// optional double reliability = 3 [default = 0];
inline bool CameraDstTypeFusionParam::has_reliability() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void CameraDstTypeFusionParam::set_has_reliability() {
  _has_bits_[0] |= 0x00000004u;
}
inline void CameraDstTypeFusionParam::clear_has_reliability() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void CameraDstTypeFusionParam::clear_reliability() {
  reliability_ = 0;
  clear_has_reliability();
}
inline double CameraDstTypeFusionParam::reliability() const {
  // @@protoc_insertion_point(field_get:apollo.perception.fusion.CameraDstTypeFusionParam.reliability)
  return reliability_;
}
inline void CameraDstTypeFusionParam::set_reliability(double value) {
  set_has_reliability();
  reliability_ = value;
  // @@protoc_insertion_point(field_set:apollo.perception.fusion.CameraDstTypeFusionParam.reliability)
}

// optional double reliability_for_unknown = 4 [default = 0];
inline bool CameraDstTypeFusionParam::has_reliability_for_unknown() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void CameraDstTypeFusionParam::set_has_reliability_for_unknown() {
  _has_bits_[0] |= 0x00000008u;
}
inline void CameraDstTypeFusionParam::clear_has_reliability_for_unknown() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void CameraDstTypeFusionParam::clear_reliability_for_unknown() {
  reliability_for_unknown_ = 0;
  clear_has_reliability_for_unknown();
}
inline double CameraDstTypeFusionParam::reliability_for_unknown() const {
  // @@protoc_insertion_point(field_get:apollo.perception.fusion.CameraDstTypeFusionParam.reliability_for_unknown)
  return reliability_for_unknown_;
}
inline void CameraDstTypeFusionParam::set_reliability_for_unknown(double value) {
  set_has_reliability_for_unknown();
  reliability_for_unknown_ = value;
  // @@protoc_insertion_point(field_set:apollo.perception.fusion.CameraDstTypeFusionParam.reliability_for_unknown)
}

// -------------------------------------------------------------------

// LidarDstTypeFusionParam

// optional string name = 1 [default = ""];
inline bool LidarDstTypeFusionParam::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LidarDstTypeFusionParam::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LidarDstTypeFusionParam::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LidarDstTypeFusionParam::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
inline const ::std::string& LidarDstTypeFusionParam::name() const {
  // @@protoc_insertion_point(field_get:apollo.perception.fusion.LidarDstTypeFusionParam.name)
  return name_.GetNoArena();
}
inline void LidarDstTypeFusionParam::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:apollo.perception.fusion.LidarDstTypeFusionParam.name)
}
#if LANG_CXX11
inline void LidarDstTypeFusionParam::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:apollo.perception.fusion.LidarDstTypeFusionParam.name)
}
#endif
inline void LidarDstTypeFusionParam::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:apollo.perception.fusion.LidarDstTypeFusionParam.name)
}
inline void LidarDstTypeFusionParam::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:apollo.perception.fusion.LidarDstTypeFusionParam.name)
}
inline ::std::string* LidarDstTypeFusionParam::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:apollo.perception.fusion.LidarDstTypeFusionParam.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LidarDstTypeFusionParam::release_name() {
  // @@protoc_insertion_point(field_release:apollo.perception.fusion.LidarDstTypeFusionParam.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LidarDstTypeFusionParam::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:apollo.perception.fusion.LidarDstTypeFusionParam.name)
}

// optional double reliability = 2 [default = 0];
inline bool LidarDstTypeFusionParam::has_reliability() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LidarDstTypeFusionParam::set_has_reliability() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LidarDstTypeFusionParam::clear_has_reliability() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LidarDstTypeFusionParam::clear_reliability() {
  reliability_ = 0;
  clear_has_reliability();
}
inline double LidarDstTypeFusionParam::reliability() const {
  // @@protoc_insertion_point(field_get:apollo.perception.fusion.LidarDstTypeFusionParam.reliability)
  return reliability_;
}
inline void LidarDstTypeFusionParam::set_reliability(double value) {
  set_has_reliability();
  reliability_ = value;
  // @@protoc_insertion_point(field_set:apollo.perception.fusion.LidarDstTypeFusionParam.reliability)
}

// optional double reliability_for_unknown = 3 [default = 0];
inline bool LidarDstTypeFusionParam::has_reliability_for_unknown() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void LidarDstTypeFusionParam::set_has_reliability_for_unknown() {
  _has_bits_[0] |= 0x00000004u;
}
inline void LidarDstTypeFusionParam::clear_has_reliability_for_unknown() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void LidarDstTypeFusionParam::clear_reliability_for_unknown() {
  reliability_for_unknown_ = 0;
  clear_has_reliability_for_unknown();
}
inline double LidarDstTypeFusionParam::reliability_for_unknown() const {
  // @@protoc_insertion_point(field_get:apollo.perception.fusion.LidarDstTypeFusionParam.reliability_for_unknown)
  return reliability_for_unknown_;
}
inline void LidarDstTypeFusionParam::set_reliability_for_unknown(double value) {
  set_has_reliability_for_unknown();
  reliability_for_unknown_ = value;
  // @@protoc_insertion_point(field_set:apollo.perception.fusion.LidarDstTypeFusionParam.reliability_for_unknown)
}

// -------------------------------------------------------------------

// DstTypeFusionConfig

// repeated .apollo.perception.fusion.CameraDstTypeFusionParam camera_params = 1;
inline int DstTypeFusionConfig::camera_params_size() const {
  return camera_params_.size();
}
inline void DstTypeFusionConfig::clear_camera_params() {
  camera_params_.Clear();
}
inline const ::apollo::perception::fusion::CameraDstTypeFusionParam& DstTypeFusionConfig::camera_params(int index) const {
  // @@protoc_insertion_point(field_get:apollo.perception.fusion.DstTypeFusionConfig.camera_params)
  return camera_params_.Get(index);
}
inline ::apollo::perception::fusion::CameraDstTypeFusionParam* DstTypeFusionConfig::mutable_camera_params(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.perception.fusion.DstTypeFusionConfig.camera_params)
  return camera_params_.Mutable(index);
}
inline ::apollo::perception::fusion::CameraDstTypeFusionParam* DstTypeFusionConfig::add_camera_params() {
  // @@protoc_insertion_point(field_add:apollo.perception.fusion.DstTypeFusionConfig.camera_params)
  return camera_params_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::apollo::perception::fusion::CameraDstTypeFusionParam >*
DstTypeFusionConfig::mutable_camera_params() {
  // @@protoc_insertion_point(field_mutable_list:apollo.perception.fusion.DstTypeFusionConfig.camera_params)
  return &camera_params_;
}
inline const ::google::protobuf::RepeatedPtrField< ::apollo::perception::fusion::CameraDstTypeFusionParam >&
DstTypeFusionConfig::camera_params() const {
  // @@protoc_insertion_point(field_list:apollo.perception.fusion.DstTypeFusionConfig.camera_params)
  return camera_params_;
}

// repeated .apollo.perception.fusion.LidarDstTypeFusionParam lidar_params = 2;
inline int DstTypeFusionConfig::lidar_params_size() const {
  return lidar_params_.size();
}
inline void DstTypeFusionConfig::clear_lidar_params() {
  lidar_params_.Clear();
}
inline const ::apollo::perception::fusion::LidarDstTypeFusionParam& DstTypeFusionConfig::lidar_params(int index) const {
  // @@protoc_insertion_point(field_get:apollo.perception.fusion.DstTypeFusionConfig.lidar_params)
  return lidar_params_.Get(index);
}
inline ::apollo::perception::fusion::LidarDstTypeFusionParam* DstTypeFusionConfig::mutable_lidar_params(int index) {
  // @@protoc_insertion_point(field_mutable:apollo.perception.fusion.DstTypeFusionConfig.lidar_params)
  return lidar_params_.Mutable(index);
}
inline ::apollo::perception::fusion::LidarDstTypeFusionParam* DstTypeFusionConfig::add_lidar_params() {
  // @@protoc_insertion_point(field_add:apollo.perception.fusion.DstTypeFusionConfig.lidar_params)
  return lidar_params_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::apollo::perception::fusion::LidarDstTypeFusionParam >*
DstTypeFusionConfig::mutable_lidar_params() {
  // @@protoc_insertion_point(field_mutable_list:apollo.perception.fusion.DstTypeFusionConfig.lidar_params)
  return &lidar_params_;
}
inline const ::google::protobuf::RepeatedPtrField< ::apollo::perception::fusion::LidarDstTypeFusionParam >&
DstTypeFusionConfig::lidar_params() const {
  // @@protoc_insertion_point(field_list:apollo.perception.fusion.DstTypeFusionConfig.lidar_params)
  return lidar_params_;
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace fusion
}  // namespace perception
}  // namespace apollo

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_dst_5ftype_5ffusion_5fconfig_2eproto__INCLUDED
